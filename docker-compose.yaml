version: '3'

services:
  # Web server to serve the example
  web:
    image: nginx:alpine
    ports:
      - "7327:80"
    volumes:
      - ./example:/usr/share/nginx/html
      - dist_volume:/usr/share/nginx/html/dist
      - styles_volume:/usr/share/nginx/html/styles
    depends_on:
      - builder
      - websocket
    restart: unless-stopped
    # Use bash for the entrypoint shell
    entrypoint: ["/bin/sh", "-c", "nginx -g 'daemon off;'"]
    # Add healthcheck
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebSocket server for hot-reload
  websocket:
    image: oven/bun:latest
    ports:
      - "8080:8080"
    volumes:
      - components_volume:/app/components:ro
      - dist_volume:/app/dist
      - ./example:/app/example
      - ./server:/app/server
      - styles_volume:/app/styles:ro
      - ./files:/app/files:ro
    working_dir: /app
    command: >
      sh -c "
        echo 'Setting up WebSocket server...' &&
        cd /app/server &&
        bun install ws --no-save &&
        bun run /app/server/websocket-server.js
      "
    restart: unless-stopped

  # Builder service to watch for changes and rebuild
  builder:
    image: oven/bun:latest
    volumes:
      - components_volume:/app/components
      - dist_volume:/app/dist
      - ./example:/app/example
      - ./server:/app/server
      - styles_volume:/app/styles
      - ./files:/app/files:ro
    working_dir: /app
    depends_on:
      - websocket
    command: >
      sh -c "
        echo 'Setting up build environment...' &&
        apt-get update && apt-get install -y inotify-tools wget netcat-openbsd &&
        mkdir -p /app/dist &&
        mkdir -p /app/example/dist &&
        mkdir -p /app/example/build-status &&
        mkdir -p /app/components &&
        mkdir -p /app/styles &&

        # Copy files from files directory to components and styles if they don't exist
        if [ ! -d "/app/components/layout" ]; then
          echo 'Initializing components directory...' &&
          cp -r /app/files/components/* /app/components/ || true
        fi &&

        if [ ! -f "/app/styles/jellicule.css" ]; then
          echo 'Initializing styles directory...' &&
          cp -r /app/files/styles/* /app/styles/ || true
        fi &&

        # Wait for WebSocket server to start
        echo 'Waiting for WebSocket server...' &&
        until wget -q --spider http://websocket:8080 2>/dev/null || nc -z websocket 8080; do
          echo 'WebSocket server not ready yet...'
          sleep 1
        done &&
        echo 'WebSocket server is ready!' &&

        # Initial build
        echo 'Performing initial build...' &&
        cd /app/server &&
        bun install --no-save &&
        bun run /app/server/build.js | bun run /app/server/websocket-client.js &&
        cp /app/dist/* /app/example/dist/ &&

        # Watch for changes
        echo 'Watching for changes...' &&
        while true; do
          inotifywait -r -e modify,create,delete /app/components &&
          echo 'Changes detected, rebuilding...' &&

          # Update version
          echo \$(date +%s) > /app/components/version.txt &&

          # Attempt to build and pipe output to WebSocket server
          bun run /app/server/build.js | bun run /app/server/websocket-client.js &&

          # Copy build files
          cp /app/dist/* /app/example/dist/
        done
      "

volumes:
  components_volume:
  styles_volume:
  dist_volume: